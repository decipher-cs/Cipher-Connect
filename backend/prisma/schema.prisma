generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  username                  String         @id @db.VarChar(16)
  displayName               String         @unique @map("display_name") @db.VarChar(16)
  passwordHash              String         @map("password_hash") @db.VarChar(60)
  createTime                DateTime       @default(now()) @map("create_time") @db.Timestamp(0)
  refreshTokens             refreshToken[]
  userNetworkUsername       userNetwork[]  @relation("userNetworkUsername")
  userNetworkConnectionName userNetwork[]  @relation("userNetworkConnectionName")
  room                      room?          @relation(fields: [roomKey], references: [key])
  roomKey                   Int?
  message                   message[]

  @@map("users")
}

model refreshToken {
  tokenOwnerIdRelation user   @relation(fields: [username], references: [username])
  tokenValue           String @id @map("token_value")
  username             String @map("username") @db.VarChar(16)

  @@map("refresh_tokens")
}

model userNetwork {
  key                      Int    @id @default(autoincrement())
  userToUsername           user   @relation("userNetworkUsername", fields: [username], references: [username])
  userToConnectionUsername user   @relation("userNetworkConnectionName", fields: [connectionUsername], references: [username])
  username                 String
  connectionUsername       String @map("connection_username")

  @@map("user_network")
}

model room {
  key                 Int       @id @default(autoincrement())
  roomName            String    @unique @default(cuid())
  roomDisplayName     String    @db.VarChar(16)
  participantsUsername user[]
  isMaxCapacityTwo    Boolean
  message             message[]
}

model message {
  key            Int      @id @default(autoincrement())
  sender         user     @relation(fields: [senderUsername], references: [username])
  senderUsername String   @db.VarChar(16)
  room           room     @relation(fields: [roomKey], references: [key])
  roomKey        Int
  content        String   @db.LongText
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
