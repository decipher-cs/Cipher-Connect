generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  username       String           @id @db.VarChar(16)
  displayName    String           @unique @map("display_name") @db.VarChar(16)
  passwordHash   String           @map("password_hash") @db.VarChar(60)
  createTime     DateTime         @default(now()) @map("create_time") @db.Timestamp(0)
  refreshTokens  refreshToken[]
  message        message[]
  userRoomConfig userRoomConfig[]
  roomRoomId     String?

  @@map("users")
}

model refreshToken {
  tokenOwnerIdRelation user   @relation(fields: [username], references: [username])
  tokenValue           String @id @map("token_value")
  username             String @map("username") @db.VarChar(16)

  @@map("refresh_tokens")
}

model userRoomConfig {
  key            Int     @id @unique @default(autoincrement())
  userRelation   user    @relation(fields: [userUsername], references: [username])
  userUsername   String  @db.VarChar(16)
  roomIdRelation room    @relation(fields: [roomId], references: [roomId])
  roomId         String
  isHidden       Boolean @default(false)

  @@map("user_room_config")
}

model room {
  roomId           String           @id @default(cuid())
  roomDisplayName  String           @db.VarChar(33)
  isMaxCapacityTwo Boolean          @default(false)
  message          message[]
  userRoomConfig   userRoomConfig[]
}

model message {
  key            Int      @id @default(autoincrement())
  sender         user     @relation(fields: [senderUsername], references: [username])
  senderUsername String   @db.VarChar(16)
  room           room     @relation(fields: [roomId], references: [roomId])
  roomId         String
  content        String   @db.LongText
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
